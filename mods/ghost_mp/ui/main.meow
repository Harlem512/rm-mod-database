let menu = instance_find(omenu_new)
if !instance_exists(menu) { return }

-- dont render unless we're on the main menu or on the rm mp menu
if menu.state != 14 and menu.state != -513 and menu.state != -514 { return }

let lobby = global.steam_lobby_get_lobby_id()

-- MARK: Main Menu
if menu.state == 14 {
  let col = draw_get_color()
  draw_set_color(c_red)

  if !global.steam_initialised() {
    global.component.label(0,0,200,22, "ERROR: Steam is not initialized")
  }
  if !global.steam_is_user_logged_on() {
    global.component.label(0,24,200,22, "ERROR: Steam not logged on")
  }

  draw_set_color(c_black)

  if global.component.button(
    418, 26, 22, 24, undefined, "Ghost Multiplayer"
  ) {
    menu.state = -513
  }
  draw_sprite_ext(
    seditor_icon_player, 0,
    429, 38,
    1, 1, 0,
    if lobby { c_white } else { c_gray }, 1
  )
  draw_set_color(col)
  return
}

-- MARK: Emote Rebind
if menu.state == -514 {
  -- check if a key is pressed
  if keyboard_check_pressed(vk_anykey) {
    let key = keyboard_lastkey_get()
    global.rm_mp.emote_button = key
    ini_open("mods/rmml/ghost_mp/config.ini")
    ini_write_real("ghost_mp", "emote_button", key)
    ini_close()
    menu.state = -513
  }
  draw_sprite_stretched(sui_9slice, 0, 54, 34, 336, 118)
  scribble("\n    Press any key to\n  rebind the emote wheel")
      .blend(0, 1)
      .transform(2, 2, 0)
      .draw(60, 39)
  return
}

-- MARK: MP Menu
let col = draw_get_color()
draw_set_color(c_black)

-- back button
if global.component.button(
  418, 2, 22, 22,
) {
  menu.state = 14
}
draw_sprite_ext(
  smenu_bar, 5, 429, 13,
  1, 1, 0, c_black, 1
)

if lobby {
  global.component.label(
    88, 2, 328, 22, "Lobby ID: " + string(lobby)
  )

  let count = global.steam_lobby_get_member_count()

  draw_sprite_stretched(sui_9slice, 0, 88, 26, 328, count * 12 + 11)

  let my_id = global.steam_get_user_steam_id()
  let i = count - 1
  let all = global.rm_mp.peer_instances
  while i >= 0 {
    let user_id = global.steam_lobby_get_member_id(i)
    let inst = all[user_id]
    let y = 32 + 12*i
    if user_id == my_id {
      draw_text(96, y, string(global.steam_get_persona_name()))
      draw_text(365, y, "You")
    } else if inst {
      scribble(inst.name).draw(96, y)
      if inst.room == 0 {
        draw_text(365, y, "Menu")
      } else {
        draw_text(365, y, global.rm_mp.character_names[inst.character])
      }
    } else {
      draw_text(96, y, " ... ")
    }
    i -= 1
  }
}

-- create/join lobby
if global.component.button(
  2, 226, 96, 22, if lobby { "Invite Friends" } else { " Create Lobby" }
) {
  if lobby {
    global.steam_lobby_activate_invite_overlay()
  } else {
    global.steam_lobby_create(1, global.rm_mp.lobby_max_players)
  }
}

-- emote
if global.component.button(
  100, 226, 96, 22,
  "Emote: " + global.rm_mp.key_get_name(global.rm_mp.emote_button)
) {
  menu.state = -514
}

-- leave lobby
if lobby and global.component.button(
  294, 226, 80, 22, "Leave Lobby"
) {
  global.steam_lobby_leave()
}

-- version
if global.component.button(
  376, 226, 66, 22, "MP " + string(global.rm_mp.version)
) {
  global.rm_mp.toggle_setting("enable_debugging")
}

-- y = i*24 + 2
let y = 2

if global.component.button(
  2, y, 84, 22,
  if global.rm_mp.enable_palette_packets { "[X] Palettes" } else { "[ ] Palettes"},
  "If ghost players should use palette colors."
) {
  global.rm_mp.toggle_setting("enable_palette_packets")
}
y += 24

if global.component.button(
  2, y, 84, 22,
  if global.rm_mp.show_players_on_map { "[X] Map Icon" } else { "[ ] Map Icon"},
  "If players should show up on the map."
) {
  global.rm_mp.toggle_setting("show_players_on_map")
}
y += 24

if global.component.button(
  2, y, 84, 22,
  if global.rm_mp.show_names { "[X] Names" } else { "[ ] Names"},
  "If ghosts should have player names."
) {
  global.rm_mp.toggle_setting("show_names")
}
y += 24

if global.component.button(
  2, y, 84, 22,
  if global.rm_mp.show_player_offscreen { "[X] Off Icon" } else { "[ ] Off Icon"},
  "If ghosts should show an offscreen icon."
) {
  global.rm_mp.toggle_setting("show_player_offscreen")
}
y += 24

if global.component.button(
  2, y, 84, 22,
  if global.rm_mp.enable_grapple_players { "[X] Hookable" } else { "[ ] Hookable"},
  "If ghost players should be hookable."
) {
  global.rm_mp.toggle_setting("enable_grapple_players")
}
y += 24

if global.component.button(
  2, y, 84, 22,
  if global.rm_mp.steam_packet_type { "Safe Packets" } else { "Fast Packets"},
  "If you have connection issues, switch every player to safe packets."
) {
  let setting = "steam_packet_type"
  let enable = !global.rm_mp[setting] * 2
  global.rm_mp[setting] = enable
  ini_open("mods/rmml/ghost_mp/config.ini")
  ini_write_real("ghost_mp", setting, enable)
  ini_close()
}
y += 24

draw_set_color(col)
